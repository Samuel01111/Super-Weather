plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.leumas.superweather'
    compileSdk 34

    defaultConfig {
        applicationId "com.leumas.superweather"
        minSdk 26
        targetSdk 34
        versionCode 8
        versionName "1.2"

        def envProps = new Properties()
        def envPropsFile = file("../env.properties")
        if (envPropsFile.exists()) {
            envPropsFile.withInputStream { stream ->
                envProps.load(stream)
            }
        }

        def weatherApiKey = System.getenv("WEATHER_API_KEY") ?: envProps.getProperty("WEATHER_API_KEY")
        buildConfigField 'String', 'WEATHER_API_KEY', "\"$weatherApiKey\""


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    testOptions {
        unitTests.all {
            jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.6'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation 'com.google.firebase:firebase-crashlytics:19.0.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'

    // For Mockito
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'org.mockito:mockito-inline:3.11.2'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'

    // For Coroutines
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'

    // For Turbine
    testImplementation 'app.cash.turbine:turbine:0.12.1'

    def lifecycle_version = "2.7.0"
    def dagger_version = "2.47"
    def room_version = "2.5.1"
    def nav_version = "2.7.7"
    def fragment_version = "1.5.7"
    def permissionsDispatcherVersion = '4.8.0'

    implementation 'androidx.compose.material3:material3:1.2.1'

    implementation 'com.google.android.gms:play-services-location:21.3.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation "com.github.permissions-dispatcher:permissionsdispatcher:$permissionsDispatcherVersion"
    kapt "com.github.permissions-dispatcher:permissionsdispatcher-processor:$permissionsDispatcherVersion"
    //noinspection GradleDependency
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation platform('androidx.compose:compose-bom:2024.06.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.06.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11"
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.11"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.airbnb.android:lottie-compose:5.2.0"
    //noinspection GradleDependency
    implementation("androidx.room:room-runtime:$room_version")
    kapt ("androidx.room:room-compiler:$room_version")

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // optional - Kotlin Extensions and Coroutines support for Room
    //noinspection GradleDependency
    implementation("androidx.room:room-ktx:$room_version")

    // ViewModel
    //noinspection GradleDependency
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    // Annotation processor
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")
    implementation("androidx.navigation:navigation-compose:$nav_version")

    //Firebase
    implementation(platform("com.google.firebase:firebase-bom:33.1.2"))
    implementation("com.google.firebase:firebase-crashlytics")
    implementation("com.google.firebase:firebase-analytics")
}
